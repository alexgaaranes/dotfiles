#!/bin/bash

if [ $# -eq 0 ]; then
	echo "Usage: $0 --title | --arturl | --artist | --album | --source"
	exit 1
fi


# Function to get data given the key
get_metadata(){
	key=$1
	playerctl metadata --format "{{$key}}" 2>/dev/null
}

# Function to get source
get_source_info(){
	trackid=$(get_metadata "mpris:trackid")
	if [[ "$trackid" == *"firefox"* ]]; then
		echo -e "Firefox 󰈹.."
	elif [[ "$trackid" == *"spotify"* ]]; then
		echo -e "Spotify .."
	elif [[ "$trackid" == *"chromium"* ]]; then
		echo -e "Chrome .."
	else
		echo ""
	fi
}
# Parse the argument
case "$1" in
--title)
	title=$(get_metadata "xesam:title")
	if [ -z "$title" ]; then
		echo ""
	else
		echo "${title:0:28}" # Limit the output to 50 characters
	fi
	;;
--arturl)
	url=$(get_metadata "mpris:artUrl")
	CACHE_DIR="/tmp/spotify_album_art"
	mkdir -p "$CACHE_DIR"
	image_path="$CACHE_DIR/album_art.jpg"
	
	curl -s "$url" -o "$image_path" &

	echo "$image_path"
	;;
--artist)
	artist=$(get_metadata "xesam:artist")
	if [ -z "$artist" ]; then
		echo ""
	else
		echo "${artist:0:30}" # Limit the output to 50 characters
	fi
	;;
--status)
	status=$(playerctl status 2>/dev/null)
	if [[ $status == "Playing" ]]; then
		echo "󰎆."
	elif [[ $status == "Paused" ]]; then
		echo "󱑽."
	else
		echo ""
	fi
	;;
--album)
	album=$(playerctl metadata --format "{{ xesam:album }}" 2>/dev/null)
	if [[ -n $album ]]; then
		echo "$album"
	else
		status=$(playerctl status 2>/dev/null)
		if [[ -n $status ]]; then
			echo "Not album"
		else
			echo ""
		fi
	fi
	;;
--source)
	get_source_info
	;;
*)
	echo "Invalid option: $1"
	echo "Usage: $0 --title | --url | --artist | --album | --source"
	exit 1
	;;
esac
